{"version":3,"sources":["../../server/serverListening.js"],"names":["app","server","createServer","callback","port","process","env","PORT","onError","error","syscall","bind","code","console","exit","listen","onListening","addr","address","log","on"],"mappings":";;;;;;AAAA;;;;;;kBAEe,UAACA,GAAD,EAAS;AACpB,QAAMC,SAAS,eAAKC,YAAL,CAAkBF,IAAIG,QAAJ,EAAlB,CAAf;AACA,QAAIC,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoBC,QAAQC,GAAR,CAAYC,IAAhC,IAAwC,IAAnD;;AAEA,aAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,YAAIA,MAAMC,OAAN,KAAkB,QAAtB,EAAgC;AAC5B,kBAAMD,KAAN;AACH;AACD,YAAME,OAAO,OAAOP,IAAP,KAAgB,QAAhB,aACCA,IADD,aAECA,IAFd;AAGA,gBAAQK,MAAMG,IAAd;AACI,iBAAK,QAAL;AACIC,wBAAQJ,KAAR,WAAsBE,IAAtB;AACAN,wBAAQS,IAAR,CAAa,CAAb;AACA;AACJ,iBAAK,YAAL;AACID,wBAAQJ,KAAR,WAAsBE,IAAtB;AACAP,wBAAQ,CAAR;AACAH,uBAAOc,MAAP,CAAcX,IAAd;AACA;AACJ;AACI,sBAAMK,KAAN;AAXR;AAaH;;AAED,aAASO,WAAT,GAAuB;AACnB,YAAMC,OAAOhB,OAAOiB,OAAP,EAAb;AACA,YAAMP,OAAO,OAAOM,IAAP,KAAgB,QAAhB,aACCA,IADD,aAECA,KAAKb,IAFnB;AAGA;AACAS,gBAAQM,GAAR,4DAAuCR,IAAvC;AACH;;AAEDV,WAAOc,MAAP,CAAcX,IAAd;AACAH,WAAOmB,EAAP,CAAU,OAAV,EAAmBZ,OAAnB;AACAP,WAAOmB,EAAP,CAAU,WAAV,EAAuBJ,WAAvB;AACH,C","file":"serverListening.js","sourcesContent":["import http from 'http';\n\nexport default (app) => {\n    const server = http.createServer(app.callback());\n    let port = process.env.port || process.env.PORT || 8988;\n\n    function onError(error) {\n        if (error.syscall !== 'listen') {\n            throw error;\n        }\n        const bind = typeof port === 'string'\n            ? `Pipe ${port}`\n            : `Port ${port}`;\n        switch (error.code) {\n            case 'EACCES':\n                console.error(`Port ${bind} requires elevated privileges`);\n                process.exit(1);\n                break;\n            case 'EADDRINUSE':\n                console.error(`Port ${bind} is already in use`);\n                port += 1;\n                server.listen(port);\n                break;\n            default:\n                throw error;\n        }\n    }\n\n    function onListening() {\n        const addr = server.address();\n        const bind = typeof addr === 'string'\n            ? `pipe ${addr}`\n            : `port ${addr.port}`;\n        // console.log(`\\n‚ùÑÔ∏è ‚ùÑÔ∏è ‚ùÑÔ∏è  Listening on ${bind}Ô∏è  ‚ùÑÔ∏è ‚ùÑÔ∏è ‚ùÑÔ∏è\\n`); // ‚ùÑ\n        console.log(`\\nü¶Ñ ü¶Ñ ü¶Ñ Listening on ${bind}Ô∏è\\n`);\n    }\n\n    server.listen(port);\n    server.on('error', onError);\n    server.on('listening', onListening);\n};\n"]}