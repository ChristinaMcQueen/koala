{"version":3,"sources":["../../../server/controllers/file.js"],"names":["publicPath","resolve","__dirname","mkdir","readSync","ctx","fileList","readdirSync","content","forEach","fileName","console","log","push","readFileSync","replace","join","body","readCallback","readdir","err","Error","filePath","readFile","error","file","readEvent","pubSub","publish","subscribe","readPubSub","emitter","EventEmitter","emit","on","readPromise","getFileList","reject","getFileContent","then","all","map","result","catch","readGenerator","ReadFile","ReadDir","next","readDir"],"mappings":"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","file":"file.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport fs from 'fs';\nimport path from 'path';\nimport events from 'events';\nimport shell from 'shelljs';\n\nimport makePubSub from './pubSub';\n\nconst publicPath = path.resolve(__dirname, 'public');\nshell.mkdir('-p', publicPath);\n\nconst readSync = (ctx) => {\n    const fileList = fs.readdirSync(publicPath);\n    const content = [];\n    fileList.forEach((fileName) => {\n        console.log('in loop:', fileName);\n        content.push(fs.readFileSync(path.resolve(publicPath, fileName), 'utf8').replace('\\n', ''));\n    });\n    console.log('done:', content.join(', '));\n    ctx.body = { content: content.join(', ') };\n};\n\nconst readCallback = (ctx) => {\n    fs.readdir(publicPath, (err, fileList) => {\n        if (err) throw new Error(`Read Dir '${publicPath}' Error`);\n        fileList.forEach((fileName) => {\n            const filePath = path.resolve(publicPath, fileName);\n            fs.readFile(filePath, 'utf8', (error, file) => {\n                if (error) throw new Error(`Read File '${filePath}' Error`);\n                console.log(file.replace('\\n', ''));\n            });\n        });\n    });\n    ctx.body = { content: 'callback' };\n};\n\nconst readEvent = (ctx) => {\n    const pubSub = makePubSub();\n    fs.readdir(publicPath, (err, fileList) => {\n        if (err) throw new Error(`Read Dir '${publicPath}' Error`);\n        pubSub.publish('readFile', fileList);\n    });\n    pubSub.subscribe('readFile', (fileList) => {\n        console.log(fileList);\n        fileList.forEach((fileName) => {\n            const filePath = path.resolve(publicPath, fileName);\n            fs.readFile(filePath, 'utf8', (err, file) => {\n                if (err) throw new Error(`Read File '${filePath}' Error`);\n                console.log(file.replace('\\n', ''));\n            });\n        });\n    });\n    ctx.body = { content: 'event' };\n};\n\nconst readPubSub = (ctx) => {\n    const emitter = new events.EventEmitter();\n    fs.readdir(publicPath, (err, fileList) => {\n        if (err) throw new Error(`Read Dir '${publicPath}' Error`);\n        console.log(fileList);\n        emitter.emit('readFile', fileList);\n    });\n    emitter.on('readFile', (fileList) => {\n        fileList.forEach((fileName) => {\n            const filePath = path.resolve(publicPath, fileName);\n            fs.readFile(filePath, 'utf8', (err, file) => {\n                if (err) throw new Error(`Read File '${filePath}' Error`);\n                console.log(file.replace('\\n', ''));\n            });\n        });\n    });\n    ctx.body = { content: 'Node event' };\n};\n\nconst readPromise = (ctx) => {\n    const getFileList = () => new Promise((resolve, reject) => {\n        fs.readdir(publicPath, (err, fileList) => (err ? reject(err) : resolve(fileList)));\n    });\n    const getFileContent = filePath => new Promise((resolve, reject) => {\n        fs.readFile(filePath, 'utf8', (err, content) => (err ? reject(err) : resolve(content.replace('\\n', ''))));\n    });\n    getFileList().then(fileList => Promise.all(fileList.map((fileName) => {\n        const filePath = path.resolve(publicPath, fileName);\n        return getFileContent(filePath);\n    }))).then((result) => {\n        console.log(result.join(', '));\n    }).catch((err) => {\n        throw err;\n    });\n    ctx.body = { content: 'promise' };\n};\n\nconst readGenerator = (ctx) => {\n    function* ReadFile(fileList) {\n        yield fileList.forEach((fileName) => {\n            const filePath = path.resolve(publicPath, fileName);\n            fs.readFile(filePath, 'utf8', (err, file) => {\n                if (err) throw new Error(`Read File '${filePath}' Error`);\n                console.log(file.replace('\\n', ''));\n            });\n        });\n    }\n    function* ReadDir() {\n        yield fs.readdir(publicPath, (err, fileList) => {\n            if (err) throw new Error(`Read Dir '${publicPath}' Error`);\n            console.log(fileList);\n            const readFile = ReadFile(fileList);\n            readFile.next();\n        });\n    }\n    const readDir = ReadDir();\n    readDir.next();\n    ctx.body = { content: 'generator' };\n};\n\nexport default {\n    readSync,\n    readCallback,\n    readEvent,\n    readPubSub,\n    readPromise,\n    readGenerator\n};\n"]}