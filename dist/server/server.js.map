{"version":3,"sources":["../../server/server.js"],"names":["app","onerror","use","bodyparser","enableTypes","logger","routes","allowedMethods","resolve","ctx","next","start","Date","ms","console","log","method","url"],"mappings":";;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,mBAAZ;;AAEA;AACA,yBAAYC,OAAZ,CAAoBD,GAApB;AACAA,IAAIE,GAAJ,CAAQ,yBAAYC,UAAZ,CAAuB;AAC3BC,iBAAa,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB;AADc,CAAvB,CAAR;AAGAJ,IAAIE,GAAJ,CAAQ,yBAAYG,MAAZ,EAAR;AACAL,IAAIE,GAAJ,CAAQ,wBAAR;;AAEAF,IAAIE,GAAJ,CAAQ,qBAAR;AACAF,IAAIE,GAAJ;;AAEA;AACAF,IAAIE,GAAJ,CAAQ,gBAAMI,MAAN,EAAR,EAAwB,gBAAMC,cAAN,EAAxB;AACAP,IAAIE,GAAJ,CAAQ,eAAKI,MAAL,EAAR,EAAuB,eAAKC,cAAL,EAAvB;AACAP,IAAIE,GAAJ,CAAQ,uCAAR;AACAF,IAAIE,GAAJ,CAAQ,yBAAM,eAAKM,OAAL,CAAa,MAAb,CAAN,CAAR;;AAEA;AACAR,IAAIE,GAAJ;AAAA,wFAAQ,iBAAOO,GAAP,EAAYC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,6BADF,GACU,IAAIC,IAAJ,EADV;AAAA;AAAA,+BAEEF,MAFF;;AAAA;AAGEG,0BAHF,GAGO,IAAID,IAAJ,KAAaD,KAHpB;;AAIJG,gCAAQC,GAAR,CAAeN,IAAIO,MAAnB,SAA6BP,IAAIQ,GAAjC,WAA0CJ,EAA1C;;AAJI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAR;;AAAA;AAAA;AAAA;AAAA;;AAOA,+BAASb,GAAT","file":"server.js","sourcesContent":["import path from 'path';\n\nimport Koa from 'koa';\nimport middlewares from 'koa-middlewares';\nimport json from 'koa-json';\nimport serve from 'koa-static';\nimport historyApiFallback from 'koa2-history-api-fallback';\n\nimport index from './routes/index';\nimport file from './routes/file';\n\nimport startApp from './serverListening';\nimport crossDomain from './middlewares/crossDomain';\nimport wrap from './middlewares/wrap';\n\nconst app = new Koa();\n\n// middlewares\nmiddlewares.onerror(app);\napp.use(middlewares.bodyparser({\n    enableTypes: ['json', 'form', 'text']\n}));\napp.use(middlewares.logger());\napp.use(json());\n\napp.use(wrap());\napp.use(crossDomain);\n\n// routes\napp.use(index.routes(), index.allowedMethods());\napp.use(file.routes(), file.allowedMethods());\napp.use(historyApiFallback());\napp.use(serve(path.resolve('dist')));\n\n// logger\napp.use(async (ctx, next) => {\n    const start = new Date();\n    await next();\n    const ms = new Date() - start;\n    console.log(`${ctx.method} ${ctx.url} - ${ms}ms`);\n});\n\nstartApp(app);\n"]}